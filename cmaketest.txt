# Specify the minimum version.
cmake_minimum_required(3.22)

# Specify the project info.
project(
logc4
VERSION 1.0.0
DESCRIPTION "A lightweight logger for the C language."
HOMEPAGE_URL "https://docs.codexuniversalis.dev/libraries/C/LogC4.html"
LANGUAGES C
)

# List of source files.
set(LIBSRC src/logc4.c)

# This is the "object library" target: compiles the sources only once.
add_library(OBJLIB OBJECT ${LIBSRC})

# Shared libraries need PIC.
set_property(TARGET OBJLIB PROPERTY POSITION_INDEPENDENT_CODE 1)

# Shared and static libraries built from the same object files.
add_library(${PROJECT_NAME} SHARED $<TARGET_OBJECTS:OBJLIB>)
add_library(${PROJECT_NAME}_static STATIC $<TARGET_OBJECTS:OBJLIB>)

# Configure the directories to search for header files.
target_include_directories(${PROJECT_NAME} PRIVATE src)

# Set the version property.
set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ${PROJECT_VERSION})

# Set the shared object version property to the project's major version.
set_target_properties(${PROJECT_NAME} PROPERTIES SOVERSION ${PROJECT_VERSION_MAJOR})

# Set the public header property to the one with the actual API.
set_target_properties(${PROJECT_NAME} PROPERTIES PUBLIC_HEADER "src/logc4.h")

# For access to standard installation directory variables (CMAKE_INSTALL_xDIR).
include(GNUInstallDirs)

# Set library shared object and API header file to install.
install(TARGETS ${PROJECT_NAME}
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
)

# Create the pkg-config file from the template.
configure_file(src/${PROJECT_NAME}.pc.in ${PROJECT_NAME}.pc @ONLY)

# Set pkg-config file to install.
install(FILES ${CMAKE_BINARY_DIR}/${PROJECT_NAME}.pc
    DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig
)
